trigger:
  - main
pr: none

stages:
  ############################################################
  ### Stage to Deploy Azure Infrastructure                 ###
  ############################################################
  - stage: deployAzureInfrastructure
    displayName: 'Deploy Azure Infrastructure'
    jobs:
      ### Job to Deploy Azure Infrastructure ###
      - deployment: deployAzureInfrastructure
        displayName: 'Deploy Azure Infrastructure'
        pool:
          name: 'global-aks'
        workspace:
          clean: all
        # This is the environment in ADO where the results of this job will be displayed.
        environment: '$(AZURE_PROJECT_NAME)'
        strategy:
          runOnce:
            deploy:
              steps:
                ### Task to Checkout GitHub Repository
                - checkout: self
                  #dispalyName: 'Checkout GitHub Repository'
                  fetchDepth: 2
                ### Task to Replace Terraform Variables
                - task: ReplaceTokens@6
                  displayName: Replace Terraform Variables
                  inputs:
                    targetFiles: '$(REPO_MANIFEST_FOLDER)/terraform-manifests/*.tf'
                    tokenPattern: custom
                    tokenPrefix: '<-'
                    tokenSuffix: '->'
                ### Task to Run Terraform Init
                - task: TerraformTaskV4@4
                  displayName: 'Run Terrafrom Init'
                  #retryCountOnTaskFailure: 3
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/$(REPO_MANIFEST_FOLDER)/terraform-manifests'
                    backendServiceArm: '$(TERRAFORM_BACKEND_SPN)'
                    backendAzureRmResourceGroupName: '$(TERRAFORM_BACKEND_RG)'
                    backendAzureRmStorageAccountName: '$(TERRAFORM_BACKEND_SA)'
                    backendAzureRmContainerName: '$(TERRAFORM_BACKEND_CONTAINER)'
                    backendAzureRmKey: '$(AZURE_PROJECT_NAME).tfstate'
                ### Task to Run Terraform Plan
                - task: TerraformTaskV4@4
                  displayName: 'Run Terrafrom Plan'
                  inputs:
                    command: 'plan'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/$(REPO_MANIFEST_FOLDER)/terraform-manifests'
                    backendServiceArm: '$(TERRAFORM_BACKEND_SPN)'
                    environmentServiceNameAzureRM: '$(AZURE_SERVICE_SPN)'
                    commandOptions: '-out create-$(Build.BuildId).plan'
                ### Task to Run Terraform Apply
                - task: TerraformTaskV4@4
                  displayName: 'Run Terrafrom Apply'
                  inputs:
                    command: 'apply'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/$(REPO_MANIFEST_FOLDER)/terraform-manifests'
                    backendServiceArm: '$(TERRAFORM_BACKEND_SPN)'
                    environmentServiceNameAzureRM: '$(AZURE_SERVICE_SPN)'
                    commandOptions: 'create-$(Build.BuildId).plan'